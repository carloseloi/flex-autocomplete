<?xml version="1.0" encoding="utf-8"?>
<FlowContainer
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns="com.hillelcoren.components.autoComplete.classes.*"
	verticalScrollPolicy="off" horizontalScrollPolicy="off"
	borderStyle="inset" backgroundColor="#FFFFFF"
	verticalGap="0" horizontalGap="0"
	initialize="init()" clipContent="true">
	
	<mx:Script>
		<![CDATA[
			import mx.core.UIComponent;
			import mx.controls.VRule;
			import mx.core.Container;
			import mx.core.EdgeMetrics;
			import mx.core.IUIComponent;
			import com.hillelcoren.components.autoComplete.interfaces.iComboItem;
			
			private var _showRemoveIcon:Boolean;
			private var _showRemoveIconChanged:Boolean;
			
			private var _enableMultiRow:Boolean;
			
			private function init():void
			{
				addEventListener( FocusEvent.FOCUS_IN, handleFocusIn );		
				addEventListener( FocusEvent.FOCUS_OUT, handleFocusOut );
			}
			
			private function handleFocusIn( event:Event ):void
			{
				drawFocus( true );				
			}
			
			private function handleFocusOut( event:Event ):void
			{
				drawFocus( false );
			}
			
			override protected function commitProperties():void
			{
				super.commitProperties();
				
				if (_showRemoveIconChanged)
				{
					_showRemoveIconChanged = false;
					
					for each (var item:iComboItem in getChildren())
					{
						if (item is SelectedItem)
						{
							SelectedItem( item ).showRemoveIcon = _showRemoveIcon;	
						}						
					}
				}
			}
			
			public function getItemPosition( comboItem:iComboItem ):Point
			{
				var lastY:int;
				var col:uint;
				var row:uint;
				
				for each (var item:UIComponent in getChildren())
				{
					if (item.y > lastY)
					{
						col = 0;
						row++;
						lastY = item.y;
					}
					
					if (item == comboItem)
					{
						return new Point( col, row );
					}
					
					col++;
				}
				
				return null;
			}
			
			public function getItemByPosition( pos:Point ):iComboItem
			{
				var lastY:int;
				var row:uint;
				var col:int;
				var lastItem:UIComponent;
				
				for each (var item:UIComponent in getChildren())
				{
					if (item.y > lastY)
					{
						col = 0;
						lastY = item.y;
						row++;
					}
					
					if (row == pos.y && col == pos.x)
					{
						return item as iComboItem;
					}
					
					lastItem = item;
					col++;
				}
				
				return null;	
			}								
			
			public function set showRemoveIcon( value:Boolean ):void
			{
				_showRemoveIcon = value;
				_showRemoveIconChanged = true;
				
				invalidateProperties();
			}
			
			public function set enableMultiRow( value:Boolean ):void
			{
				_enableMultiRow = value;
			}
						
		]]>
	</mx:Script>
	
</FlowContainer>